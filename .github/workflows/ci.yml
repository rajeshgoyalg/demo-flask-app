# name: CI Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-test-push:
#     runs-on: ubuntu-latest
#     outputs:
#       IMAGE_TAG: ${{ steps.version.outputs.VERSION_TAG }}  # Define output variable. This will be used in the next step.
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2
        
#       - name: Extract Git Commit SHA and Date for Versioning
#         id: version
#         run: |
#           VERSION_TAG="v$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
#           echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_ENV
#           echo "VERSION_TAG=$VERSION_TAG" >> $GITHUB_OUTPUT  # Store as an output
#           echo "Docker image version: $VERSION_TAG"

#       - name: Log in to Docker Hub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_HUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

#       - name: Build Docker Image
#         run: |
#           docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/demo-flask-app:latest -t ${{ secrets.DOCKER_HUB_USERNAME }}/demo-flask-app:${{ env.VERSION_TAG }} .

#       - name: Push Docker Image
#         run: |
#           docker push ${{ secrets.DOCKER_HUB_USERNAME }}/demo-flask-app:latest
#           docker push ${{ secrets.DOCKER_HUB_USERNAME }}/demo-flask-app:${{ env.VERSION_TAG }}
  
#   update-helm:
#     needs: build-test-push  # Ensures deployment happens after CI
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Helm Repository
#         uses: actions/checkout@v4
#         with:
#           repository: rajeshgoyalg/demo-helm-charts
#           token: ${{ secrets.GH_PAT }}

#       - name: Update Image Tag in values.yaml
#         run: |
#           sed -i "s|tag: .*|tag: ${{ needs.build-test-push.outputs.IMAGE_TAG }}|g" demo-flask-app/values.yaml

#       - name: Push Changes to Helm Repo
#         run: |
#           git config --global user.name "Rajesh Goyal"
#           git config --global user.email "rajeshgoyalg@gmail.com"
#           git add demo-flask-app/values.yaml
#           git commit -m "Update image tag to ${{ needs.build-test-push.outputs.IMAGE_TAG }}"
#           git push origin main

#   # ✅ Deploy to AWS ECS (New Step)
#   deploy-ecs:
#     needs: build-test-push  # Ensures this runs after CI
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write  # ✅ Required for OIDC authentication
#       contents: read
#     steps:
#       - name: Configure AWS CLI
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: arn:aws:iam::180294189279:role/github-actions-role  # Replace with actual IAM role
#           aws-region: ap-southeast-1

#       - name: Retrieve ECS Task Definition
#         run: |
#           aws ecs describe-task-definition --task-definition demo-flask-app-task --query "taskDefinition" > task-definition.json

#       - name: Update ECS Task Definition with New Image
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-definition.json
#           container-name: demo-flask-app
#           image: "rajeshgoyalg/demo-flask-app:${{ needs.build-test-push.outputs.IMAGE_TAG }}"

#       - name: Deploy to Amazon ECS
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v2
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: demo-flask-service
#           cluster: demo-devops-cluster
#           wait-for-service-stability: true